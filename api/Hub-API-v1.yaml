openapi: 3.0.0
info:
  title: Hub to EVV API
  description: |-
    This API defines the secure data connection from the Hub (HR/Training) system to the EVV (HIPAA/Care) system.
    - The Hub is the source of truth for all employee and compliance data.
    - The EVV system is a consumer of this data.
    - All communication is secured via OAuth 2.0 Client Credentials.
  version: 1.0.0

servers:
  - url: https://hub.yourcompany.com/api/v1
    description: Production Server

security:
  - oAuth2ClientCredentials: [read:compliance]

paths:
  /staff/{employee_id}/capabilities:
    get:
      summary: Get Compliance Capabilities for a Staff Member
      description: |-
        Retrieves a list of active compliance qualifications and certifications for a single staff member. 
        This is the primary endpoint for the EVV scheduling module to verify that a staff member is qualified for a specific task.
      security:
        - oAuth2ClientCredentials: [read:compliance]
      parameters:
        - name: employee_id
          in: path
          required: true
          description: The unique identifier of the staff member in the Hub system.
          schema:
            type: integer
      responses:
        '200':
          description: A successful response with the staff member's capabilities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCapabilities'
        '401':
          description: Unauthorized. The access token is missing or invalid.
        '404':
          description: Not Found. A staff member with the specified ID was not found.

  /ask-if:
    post:
      summary: Submit a query to the Ask IF AI Assistant
      description: |-
        Allows a user on the EVV platform to submit a natural language query. 
        The Hub will process the query using the "Ask IF" module and return a grounded answer.
      security:
        - oAuth2ClientCredentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskIfQuery'
      responses:
        '200':
          description: A successful response containing the answer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskIfResponse'
        '401':
          description: Unauthorized.

  /signals:
    post:
      summary: Ingest a behavioral signal from the EVV
      description: |-
        Allows the EVV system to send a non-PHI behavioral signal to the Hub's `if_signals` module. 
        This is used to track events like overtime for the retention and engagement engine.
      security:
        - oAuth2ClientCredentials: [write:signals]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signal'
      responses:
        '202':
          description: Accepted. The signal was received and will be processed asynchronously.
        '400':
          description: Bad Request. The signal format was invalid.
        '401':
          description: Unauthorized. The token is missing or lacks the 'write:signals' scope.

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://hub.yourcompany.com/api/auth/token
          scopes:
            read:compliance: Read compliance data for staff members
            write:signals: Allow the EVV system to write behavioral signals to the Hub

  schemas:
    StaffCapabilities:
      type: object
      properties:
        employee_id:
          type: integer
          description: The unique ID of the staff member.
          example: 101
        last_updated:
          type: string
          format: date-time
          description: The timestamp when the capabilities were last updated in the Hub.
        capabilities:
          type: array
          description: A list of the staff member's current, valid compliance capabilities.
          items:
            type: object
            properties:
              key:
                type: string
                description: A machine-readable key for the capability.
                example: "diabetic_trained"
              name:
                type: string
                description: The human-readable name of the capability.
                example: "Diabetic Training"
              expiry_date:
                type: string
                format: date
                description: The expiration date of the capability, if applicable.
                nullable: true
                example: "2026-10-05"
      example:
        employee_id: 101
        last_updated: "2025-10-06T12:00:00Z"
        capabilities:
          - key: "cpr_certified"
            name: "CPR Certification"
            expiry_date: "2026-08-15"
          - key: "diabetic_trained"
            name: "Diabetic Training"
            expiry_date: null
          - key: "has_valid_drivers_license"
            name: "Valid Driver's License"
            expiry_date: "2028-05-20"

    AskIfQuery:
      type: object
      properties:
        query:
          type: string
          description: "The user's natural language question."
          example: "How do I request time off?"
        user_language:
          type: string
          description: "The language code of the user (e.g., 'en', 'es')."
          example: "es"

    AskIfResponse:
      type: object
      properties:
        answer:
          type: string
          description: "The generated, natural language answer."
        source_articles:
          type: array
          description: "A list of source documents from the knowledge base used to generate the answer."
          items:
            type: object
            properties:
              title:
                type: string
                example: "Paid Time Off (PTO) Policy"
              url:
                type: string
                example: "/knowledge/article/123"

    Signal:
      type: object
      required:
        - employee_id
        - signal_type
      properties:
        employee_id:
          type: integer
          description: "The unique Hub ID of the employee generating the signal."
          example: 123
        signal_type:
          type: string
          description: "A machine-readable key for the type of signal."
          example: "worked_overtime"
        timestamp:
          type: string
          format: date-time
          description: "The ISO 8601 timestamp of when the event occurred. Defaults to now if not provided."
        payload:
          type: object
          description: "A flexible JSON object containing additional data about the signal."
          example:
            hours: 45
            pay_period_end: "2025-10-10"
